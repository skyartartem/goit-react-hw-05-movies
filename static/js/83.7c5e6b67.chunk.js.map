{"version":3,"file":"static/js/83.7c5e6b67.chunk.js","mappings":"oPACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACkBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDG,EADC,4BACqBF,EADrB,oBADlB,cACCI,EADD,yBAIEA,EAASC,MAJX,kE,eCFMC,E,OAAOC,EAAAA,GAAH,2G,SCiDjB,EA7Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAQV,EACT,GAAE,CAACA,IAEJ,IAAMU,EAAO,mCAAG,WAAMhB,GAAN,8EACdc,GAAW,GADG,kBAGOf,EAAWC,GAHlB,OAGNG,EAHM,OAIZO,EAAQP,EAAKM,MAJD,gDAQZQ,QAAQC,IAAR,MACAN,EAAS,EAAD,IATI,yBAWZE,GAAW,GAXC,4EAAH,sDAeb,OACE,2BACGD,IAAW,wCACXF,IAAS,oDACV,SAACP,EAAD,UACGK,EAAKU,KAAI,SAAAC,GACR,OACE,2BACE,gBAAKC,IAAG,UApCL,mCAoCK,OAAgBD,EAAKE,cAAgBC,IAAKH,EAAKI,QACvD,wBAAKJ,EAAKI,QACV,sCAAcJ,EAAKK,eAHZL,EAAKM,QAMjB,QAIR,C","sources":["services/getCredits.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'e0c08addb9dce27b15dd25ed60160779';\n\nexport async function getCredits(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY_API}&language=en-US`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style: none;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n\n` ","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/getCredits';\nimport { List } from './Cast.styled';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  //   const [crew, setCrew] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    getFunc(movieId);\n  }, [movieId]);\n\n  const getFunc = async id => {\n    setloading(true);\n    try {\n      const data = await getCredits(id);\n      setCast(data.cast);\n      //   setCrew(data.crew);\n      //   setPage(data.page);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setloading(false);\n    }\n  };\n// console.log(cast);\n  return (\n    <div>\n      {loading && <div>loading...</div>}\n      {error && <h2>Somethig goes wrong...</h2>}\n      <List>\n        {cast.map(item => {\n          return (\n            <li key={item.cast_id}>\n              <img src={`${BASE_URL}${item.profile_path}`} alt={item.name} />\n              <h3>{item.name}</h3>\n              <p>Caracter: {item.character}</p>\n            </li>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["BASE_URL","KEY_API","getCredits","id","axios","response","data","List","styled","movieId","useParams","useState","cast","setCast","error","setError","loading","setloading","useEffect","getFunc","console","log","map","item","src","profile_path","alt","name","character","cast_id"],"sourceRoot":""}