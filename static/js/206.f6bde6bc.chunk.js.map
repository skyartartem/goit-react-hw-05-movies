{"version":3,"file":"static/js/206.f6bde6bc.chunk.js","mappings":"+OAEaA,E,OAAOC,EAAAA,KAAH,mE,SC2CjB,EAzCkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEnB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAEE,UAACL,EAAD,CACEM,SAAU,SAAAC,GAER,GADAA,EAAIC,kBACCJ,EACH,OAAOK,MAAM,0BAEfP,EAAaE,GAVjBC,EAAU,GAYP,EARH,WAUE,kBACEK,MAAON,EACPO,SArBgB,SAAAJ,GACpBF,EAAUE,EAAIK,cAAcF,MAC7B,EAoBKG,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAEd,mBAAQH,KAAK,SAAb,sBAGL,E,0BCtCKI,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,4FAAgCC,EAAhC,+BAAuC,EAAvC,SACkBC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,gCACcC,EADd,gCAC6CG,EAD7C,qCAC8ED,IAFhG,cACCG,EADD,yBAIEA,EAASC,MAJX,mECCP,IAyDA,EAzDe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMT,EAAK,UAAGQ,EAAaE,IAAI,gBAApB,QAAgC,GAG3C,GAA0B5B,EAAAA,EAAAA,UAAS,MAAnC,eAAO6B,EAAP,KAAcC,EAAd,KACA,GAA4B9B,EAAAA,EAAAA,UAAS,IAArC,eAAO+B,EAAP,KAAeC,EAAf,KACA,GAA8BhC,EAAAA,EAAAA,WAAS,GAAvC,eAAOiC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACHjB,GAGLkB,EAAQlB,EACT,GAAE,CAACA,IAEJ,IAAMkB,EAAO,mCAAG,WAAMlB,GAAN,8EACdgB,GAAW,GADG,kBAGOjB,EAAUC,GAHjB,OAGNI,EAHM,OAIZU,EAAUV,EAAKe,SAJH,gDAOZC,QAAQC,IAAR,MACAT,EAAS,EAAD,IARI,yBAUZI,GAAW,GAVC,4EAAH,sDAoBb,OACE,4BACE,SAAC,EAAD,CAAWnC,aARM,SAAAmB,GAEnBS,EAD6B,KAAVT,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAGhD,IAKIe,IAAW,yCACZ,wBACGF,EAAOS,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,SACGkB,EAAMK,SAFFL,EAAME,GAMlB,MAEFd,IAAS,qDAGf,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","services/getSearch.js","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 10px;\n  margin-left: 10px;\n`;\n","import { useState } from 'react';\nimport { Form } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ handleSubmit }) => {\n\n  const [search, setSearch] = useState('');\n\n  const onChangeInput = evt => {\n    setSearch(evt.currentTarget.value);\n  };\n\n  const resetForm = () => {\n    setSearch('');\n  };\n  return (\n    \n    <Form\n      onSubmit={evt => {\n        evt.preventDefault();\n        if (!search) {\n          return alert('Enter text for search.');\n        }\n        handleSubmit(search);\n        resetForm();\n      }}\n    >\n      <input\n        value={search}\n        onChange={onChangeInput}\n        name=\"search\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n      />\n      <button type=\"submit\">search</button>\n    </Form>\n  );\n};\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired\n};\n\nexport default SearchBar;\n\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'e0c08addb9dce27b15dd25ed60160779';\n\nexport async function getSearch(query, page = 1) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY_API}&language=en-US&page=${page}&include_adult=true&query=${query}`\n  );\n  return response.data;\n}\n","import SearchBar from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearch } from 'services/getSearch';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  //   const [search, setSearch] = useState('');\n  //   const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getFunc(query);\n  }, [query]);\n\n  const getFunc = async query => {\n    setloading(true)\n    try {\n      const data = await getSearch(query);\n      setMovies(data.results);\n      //  setPage(data.page);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setloading(false);\n    }\n  };\n\n  const handleSubmit = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n      // setSearchParams(query);\n  };\n\n  return (\n    <div>\n      <SearchBar handleSubmit={handleSubmit} />\n      {loading && <div>loading...</div>}\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      {error && <h2>Somethig goes wrong...</h2>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","handleSubmit","useState","search","setSearch","onSubmit","evt","preventDefault","alert","value","onChange","currentTarget","name","type","autoComplete","autoFocus","placeholder","BASE_URL","KEY_API","getSearch","query","page","axios","response","data","location","useLocation","useSearchParams","searchParams","setSearchParams","get","error","setError","movies","setMovies","loading","setloading","useEffect","getFunc","results","console","log","map","movie","to","id","state","from","title"],"sourceRoot":""}