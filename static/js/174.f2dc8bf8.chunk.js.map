{"version":3,"file":"static/js/174.f2dc8bf8.chunk.js","mappings":"sPACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,4FAA8BC,EAA9B,+BAAmC,EAAnC,SACkBC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,iBACDG,EADC,4BACqBF,EADrB,gCACoDG,IAFtE,cACCE,EADD,yBAIEA,EAASC,MAJX,mE,eCFMC,E,OAAOC,EAAAA,GAAH,uG,SCkDjB,EA/CgB,WAEd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAQV,EACT,GAAE,CAACA,IAEJ,IAAMU,EAAO,mCAAG,WAAMjB,GAAN,8EACde,GAAW,GADG,kBAGOhB,EAAWC,GAHlB,OAGNI,EAHM,OAIZO,EAAWP,EAAKM,SAJJ,gDAOZQ,QAAQC,IAAR,MACAN,EAAS,EAAD,IARI,yBAUZE,GAAW,GAVC,4EAAH,sDAcb,OACE,2BACGD,IAAW,wCACXF,IAAS,mDACU,IAAnBF,EAAQU,QACP,mEAEA,SAACf,EAAD,UACGK,EAAQW,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKtB,GAKjB,QAKV,C","sources":["services/getReviews.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'e0c08addb9dce27b15dd25ed60160779';\n\nexport async function getReviews(id, page=1) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY_API}&language=en-US&page=${page}`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  /* display: flex;\n  flex-wrap: wrap; */\n  gap: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getReviews';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    getFunc(movieId);\n  }, [movieId]);\n\n  const getFunc = async id => {\n    setloading(true);\n    try {\n      const data = await getReviews(id);\n      setResults(data.results);\n      //   setPage(data.page);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setloading(false);\n    }\n  };\n  // console.log(results);\n  return (\n    <div>\n      {loading && <div>loading...</div>}\n      {error && <h2>Somethig goes wrong...</h2>}\n      {results.length === 0 ? (\n        <div>We don't have any review information</div>\n      ) : (\n        <List>\n          {results.map(item => {\n            return (\n              <li key={item.id}>\n                <h3>Author: {item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","KEY_API","getReviews","id","page","axios","response","data","List","styled","movieId","useParams","useState","results","setResults","error","setError","loading","setloading","useEffect","getFunc","console","log","length","map","item","author","content"],"sourceRoot":""}