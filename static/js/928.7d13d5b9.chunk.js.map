{"version":3,"file":"static/js/928.7d13d5b9.chunk.js","mappings":"uQACMA,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDG,EADC,oBACaF,EADb,oBADlB,cACCI,EADD,yBAIEA,EAASC,MAJX,kE,8BCCMC,EAAOC,EAAAA,EAAAA,IAAH,kQAmBJC,EAAcD,EAAAA,EAAAA,IAAH,4CAGXE,EAAUF,EAAAA,EAAAA,GAAH,oFAKPG,GAAWH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,2I,SCiDrB,EApEqB,WAAO,IAAD,QACjBK,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,QAAM,oBAACV,EAASW,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEhDC,EAAAA,EAAAA,YAAU,WACRC,EAAQhB,EACT,GAAE,CAACA,IAEJ,IAAMgB,EAAO,mCAAG,WAAM1B,GAAN,8EACdkB,GAAW,GADG,kBAGOnB,EAAYC,GAHnB,OAGNG,EAHM,OAIZa,EAASb,GAJG,gDAOZwB,QAAQC,IAAR,MACAR,EAAS,EAAD,IARI,yBAUZF,GAAW,GAVC,4EAAH,sDAab,OACE,2BACGD,IAAW,wCACXE,IAAS,oDAEV,UAACX,EAAD,CAAUqB,GAAIR,EAASS,QAAvB,WACE,SAAC,MAAD,CAAaC,KAAK,OADpB,eAIA,UAAC3B,EAAD,YACE,gBACE4B,IAAG,UAtCI,mCAsCJ,OAAgBjB,EAAMkB,aACzBC,IAAKnB,EAAMoB,QAEXlB,IACA,UAACX,EAAD,YACE,0BACGS,EAAMqB,MADT,eACkBrB,EAAMsB,oBADxB,aACkB,EAAoBC,OAAO,EAAG,GADhD,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBzB,EAAM0B,cAAjC,QACA,sCACA,uBAAI1B,EAAM2B,YACV,oCACA,iCAAI3B,EAAM4B,cAAV,aAAI,EAAcC,KAAI,SAAAC,GAAI,OAAIA,EAAKV,IAAT,IAAeW,KAAK,eAIpD,oDACA,UAACvC,EAAD,YACE,yBACE,SAAC,KAAD,CAAMsB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAkB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["services/getDetails.js","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY_API = 'e0c08addb9dce27b15dd25ed60160779';\n\nexport async function getDetaiils(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY_API}&language=en-US`\n  );\n  return response.data;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\n\n\nexport const Card = styled.div`\n  /* @media screen and(min-width: 420px) {\n    flex-wrap: wrap;\n  } */\n\n  display: flex;\n  @media (max-width: 520px) {\n    flex-wrap: wrap;\n  }\n  flex-wrap: nowrap;\n  padding-bottom: 20px;\n  border-bottom: solid 1px black;\n`;\n// export const StyledImg = styled.img`\n//   display: block;\n//   max-width: 100%;\n//   height: auto;\n// `;\n\nexport const Description = styled.div`\n    padding: 15px;\n`\nexport const Wrapper = styled.ul`\n  padding-bottom: 20px;\n  border-bottom: solid 1px black;\n`;\n\nexport const BackLink = styled(Link)`\ndisplay: block;\nwidth: 100px;\n/* margin-bottom: 10px; */\n  padding: 10px;\n  &:hover{\n    color: orange;\n  }\n`","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { getDetaiils } from 'services/getDetails';\nimport {\n  Card,\n  Description,\n  Wrapper,\n  BackLink,\n  // StyledImg\n} from './MovieDetails.styled';\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n  const [loading, setloading] = useState(false);\n  const [error, setError] = useState(null);\n  const backLink = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getFunc(movieId);\n  }, [movieId]);\n\n  const getFunc = async id => {\n    setloading(true);\n    try {\n      const data = await getDetaiils(id);\n      setMovie(data);\n      //   setPage(data.page);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    } finally {\n      setloading(false);\n    }\n  };\n  return (\n    <div>\n      {loading && <div>loading...</div>}\n      {error && <h2>Somethig goes wrong...</h2>}\n\n      <BackLink to={backLink.current}>\n        <FaArrowLeft size=\"10\" /> Go back\n      </BackLink>\n\n      <Card>\n        <img\n          src={`${BASE_URL}${movie.poster_path}`}\n          alt={movie.name}\n        />\n        {!loading && (\n          <Description>\n            <h2>\n              {movie.title} ({movie.release_date?.substr(0, 4)})\n            </h2>\n            <p>User Score: {Math.floor(movie.vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n            <p>{movie.genres?.map(item => item.name).join(', ')}</p>\n          </Description>\n        )}\n      </Card>\n      <h3>Additional information</h3>\n      <Wrapper>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </Wrapper>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASE_URL","KEY_API","getDetaiils","id","axios","response","data","Card","styled","Description","Wrapper","BackLink","Link","movieId","useParams","location","useLocation","useState","movie","setMovie","loading","setloading","error","setError","backLink","useRef","state","from","useEffect","getFunc","console","log","to","current","size","src","poster_path","alt","name","title","release_date","substr","Math","floor","vote_average","overview","genres","map","item","join","Suspense","fallback"],"sourceRoot":""}